version: "3.8"

services:
  php:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/var/cache
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_PASSPHRASE=${JWT_PASSPHRASE}
    depends_on:
      - db

  # Nginx
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  # MySQL
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  # Angular
  frontend:
    image: node:20-alpine
    working_dir: /app
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
    command: >
      sh -c "if [ ! -d 'node_modules' ]; then npm install; fi && npm run ng -- serve --host 0.0.0.0"

volumes:
  db_data:
